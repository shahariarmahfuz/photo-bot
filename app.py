import logging
import requests
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, CommandHandler, CallbackContext

TOKEN = "7305874644:AAEcpUBhpmmOrv0rE-0xTJsUSxsTmO5qZHw"
BASE_URL = "https://b15638c8-af87-4164-b831-414c185be4c8-00-3o5w0isf9c16d.pike.replit.dev"
UPLOAD_URL = f"{BASE_URL}/photo"

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", 
    level=logging.INFO
)

async def start(update: Update, context: CallbackContext):
    await update.message.reply_text("üëã ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ! ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶õ‡¶¨‡¶ø ‡¶™‡¶æ‡¶†‡¶æ‡¶®, ‡¶Ü‡¶Æ‡¶ø ‡¶∏‡ßá‡¶ü‡¶ø ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶¨‡•§")

async def handle_photo(update: Update, context: CallbackContext):
    # ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßç‡¶ü‡ßã‡¶∞ ‡¶ï‡¶∞‡¶æ
    processing_message = await update.message.reply_text("‚ö° ‡¶õ‡¶¨‡¶ø‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá...")
    
    try:
        # ‡¶õ‡¶¨‡¶ø ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°
        photo = update.message.photo[-1]
        file = await context.bot.get_file(photo.file_id)
        response = requests.get(file.file_path)
        
        if response.status_code != 200:
            raise Exception("Failed to download image")
        
        # ‡¶õ‡¶¨‡¶ø ‡¶Ü‡¶™‡¶≤‡ßã‡¶°
        files = {"file": ("image.jpg", response.content, "image/jpeg")}
        res = requests.post(UPLOAD_URL, files=files)
        
        if res.status_code != 200:
            raise Exception("Failed to upload image")
        
        # ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶§‡ßà‡¶∞‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü
        data = res.json()
        final_url = f"{BASE_URL}{data['local_url']}"
        markdown_link = f"`{final_url}`"
        
        # ‡¶´‡¶æ‡¶á‡¶®‡¶æ‡¶≤ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã
        await update.message.reply_text(
            f"‚úÖ ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®!\nüîó ‡¶≤‡¶ø‡¶Ç‡¶ï: {markdown_link}",
            parse_mode="MarkdownV2"
        )
        
    except Exception as e:
        logging.error(f"Error: {e}")
        await update.message.reply_text("‚ùå ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá, ‡¶™‡¶∞‡ßá ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®!")
        
    finally:
        # ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü
        await context.bot.delete_message(
            chat_id=update.effective_chat.id,
            message_id=processing_message.message_id
        )

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    print("ü§ñ ‡¶¨‡¶ü ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá...")
    app.run_polling()

if __name__ == "__main__":
    main()
